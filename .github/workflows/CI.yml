name: CI

on:
  push:
    branches:
      - master  # Esta acción se ejecutará cada vez que haya un push a la rama master

jobs:
  build:
    runs-on: ubuntu-latest  # La acción se ejecutará en un contenedor de Ubuntu

    steps:
      # Paso 1: Clonar el repositorio
      - name: Checkout
        uses: actions/checkout@v2

      # Paso 2: Configurar JDK 11 (por si necesitas compilar aplicaciones Java)
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      # Paso 3: Construir el proyecto con Gradle (si es necesario)
      - name: Build with Gradle
        run: ./gradlew build  # Ejecuta el build de Gradle

      # Paso 4: Construir las imágenes Docker
      - name: Build Docker Images
        run: |
          docker build -t p2gps/web deploy/docker/Clients
          docker build -t p2gps/order deploy/docker/Order
          docker build -t p2gps/db deploy/docker/Database

      # Paso 5: Iniciar sesión en Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      # Paso 6: Etiquetar y subir las imágenes a Docker Hub
      - name: Push Docker Images
        run: |
          docker tag p2gps/web ${{ secrets.DOCKERHUB_USERNAME }}/p2gps:web
          docker tag p2gps/order ${{ secrets.DOCKERHUB_USERNAME }}/p2gps:order
          docker tag p2gps/db ${{ secrets.DOCKERHUB_USERNAME }}/p2gps:db
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/p2gps:web
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/p2gps:order
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/p2gps:db